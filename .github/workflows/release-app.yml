# Stage PyInstaller application packages through GitHub Actions (GHA) to GitHub Workflow Artifacts section.
# https://github.com/actions/upload-artifact#where-does-the-upload-go
name: "Release: Application Bundle"

on:
  pull_request: ~
  push:
    tags:
      - '*.*.*'

jobs:

  cfr:
    name: "CFR for OS ${{ matrix.os }}"

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          "macos-13",        # Intel
          "macos-latest",    # ARM
          "ubuntu-latest",   # Intel
          "windows-latest",  # Intel
        ]

    steps:

    - name: Acquire sources
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Set up project
      run: pip install --use-pep517 --prefer-binary --editable='.[cfr,release-cfr]'

    - name: Build application bundle
      run: poe build-cfr

    - name: Compute artifact suffix (OS-ARCH)
      id: artifact-suffix
      uses: ASzc/change-string-case-action@v6
      with:
        string: "${{ runner.os }}-${{ runner.arch }}"

    - name: Upload artifact for Linux and macOS
      if: runner.os != 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: "cratedb-cfr-${{ steps.artifact-suffix.outputs.lowercase }}"
        path: dist/cratedb-cfr

    - name: Upload artifact for Windows
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: "cratedb-cfr-${{ steps.artifact-suffix.outputs.lowercase }}"
        path: dist/cratedb-cfr.exe

    # TODO: Upload to release assets or GitHub Pages, when invoked on "tag" event.
    #if: startsWith(github.event.ref, 'refs/tags')
